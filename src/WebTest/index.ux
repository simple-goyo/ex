<template>
  <div class="doc-page">
    <!-- <div class="content">
      <input type="button" value="发送param到html" onclick="sendMsg"/>
      <text>等待来自html页面的消息: {{message}}</text>
    </div>
    <text>请根据实际情况，将page_one.html和page_two.html页面放到本地服务器。修改对应的请求地址，然后后进行测试。</text> -->
    <web src="http://192.168.1.110:8080/quickapp/voicerecord/page_one.html" trustedurl="{{trust}}" onmessage="messagefn" id="web"></web>
  </div>
</template>

<script>
import record from '@system.record'
import audio from '@system.audio'
import storage from '@system.storage'
import request from '@system.request'
import prompt from '@system.prompt'

var filename

  export default {
    data: {
      param: {
        'title': 'hello world0'
      },
      message: '',
      // 只有trustedurl中信任的网址才能实现和框架的双向通信
      // trustedurl的值为数组，元素可以是正则或字符串
      // trustedurl会默认添加web组件src属性的初始值
      trust: [
        // 'http://192.168.1.110:8080/quickapp/voicerecord/page_one.html',
        // 'http://192.168.1.110:8080/quickapp/voicerecord/page_two.html',
        /^http:\/\/.*\.html$/
      ]
    },
    onInit () {
      this.$page.setTitleBar({text: 'web页面通信'})
    },
    sendMsg () {
      const msg = JSON.stringify(this.param)
      this.$element('web').postMessage({message: msg})
    },
    messagefn (e) {
      this.message = e.message
    }
  }
</script>

<style>
  @import "../Common/css/index.css";

  .content {
    flex-direction: column;
    align-items: flex-start;
    border:1px solid #cccccc;
    margin: 20px;
  }
  web {
    flex: 1;
    margin: 20px;
  }
  input {
    padding: 10px;
    margin-bottom: 20px;
  }
</style>
